"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./context/ListContext.js":
/*!********************************!*\
  !*** ./context/ListContext.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ListProvider: function() { return /* binding */ ListProvider; },\n/* harmony export */   useList: function() { return /* binding */ useList; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst ListContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst useList = ()=>{\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ListContext);\n    if (!context) {\n        throw new Error(\"useList must be used within a ListProvider\");\n    }\n    return context;\n};\n_s(useList, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst ListProvider = (param)=>{\n    let { children } = param;\n    _s1();\n    const [list, setList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        items: []\n    });\n    const [lastRefresh, setLastRefresh] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const savedList = localStorage.getItem(\"list\");\n        console.log(\"Initial load - Saved list from localStorage:\", savedList);\n        if (savedList) {\n            const parsedList = JSON.parse(savedList);\n            console.log(\"Parsed list:\", parsedList);\n            if (parsedList.expiration > Date.now()) {\n                console.log(\"Setting list from localStorage\");\n                setList(parsedList.data);\n                setLastRefresh(parsedList.lastRefresh);\n            } else {\n                console.log(\"List expired, removing from localStorage\");\n                localStorage.removeItem(\"list\");\n            }\n        }\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"List changed, updating localStorage\", list);\n        const listData = {\n            data: list,\n            expiration: Date.now() + 30 * 24 * 60 * 60 * 1000,\n            lastRefresh\n        };\n        localStorage.setItem(\"list\", JSON.stringify(listData));\n    }, [\n        list,\n        lastRefresh\n    ]);\n    const generateUniqueId = (item)=>{\n        var _item_title;\n        return \"\".concat(item.id || \"\", \"-\").concat(((_item_title = item.title) === null || _item_title === void 0 ? void 0 : _item_title.replace(/\\s+/g, \"-\").slice(0, 20)) || \"\", \"-\").concat(Date.now());\n    };\n    const addToList = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((newItem)=>{\n        console.log(\"Adding item to list:\", newItem);\n        setList((prevList)=>{\n            const existingItemIndex = prevList.items.findIndex((item)=>item.id === newItem.id && item.source === newItem.source);\n            if (existingItemIndex !== -1) {\n                console.log(\"Item already exists, updating quantity\");\n                const updatedItems = prevList.items.map((item, index)=>index === existingItemIndex ? {\n                        ...item,\n                        quantity: (item.quantity || 1) + 1\n                    } : item);\n                return {\n                    ...prevList,\n                    items: updatedItems\n                };\n            } else {\n                console.log(\"Adding new item to list\");\n                return {\n                    ...prevList,\n                    items: [\n                        ...prevList.items,\n                        {\n                            ...newItem,\n                            uniqueId: generateUniqueId(newItem),\n                            quantity: 1,\n                            originalPrice: newItem.price,\n                            lastVerifiedPrice: newItem.price,\n                            lastUpdated: new Date().toISOString()\n                        }\n                    ]\n                };\n            }\n        });\n    }, []);\n    const removeFromList = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((uniqueId)=>{\n        console.log(\"Removing item from list:\", uniqueId);\n        setList((prevList)=>({\n                ...prevList,\n                items: prevList.items.filter((item)=>item.uniqueId !== uniqueId)\n            }));\n    }, []);\n    const updateQuantity = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((uniqueId, newQuantity)=>{\n        console.log(\"Updating quantity:\", uniqueId, newQuantity);\n        setList((prevList)=>{\n            const updatedItems = prevList.items.map((item)=>{\n                if (item.uniqueId === uniqueId) {\n                    return {\n                        ...item,\n                        quantity: newQuantity\n                    };\n                }\n                return item;\n            });\n            return {\n                ...prevList,\n                items: updatedItems\n            };\n        });\n    }, []);\n    const addNote = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((uniqueId, note)=>{\n        console.log(\"Adding note:\", uniqueId, note);\n        setList((prevList)=>({\n                ...prevList,\n                items: prevList.items.map((item)=>item.uniqueId === uniqueId ? {\n                        ...item,\n                        note\n                    } : item)\n            }));\n    }, []);\n    const refreshList = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        console.log(\"Refreshing list\", list.items);\n        const updatedItems = await Promise.all(list.items.map(async (item)=>{\n            try {\n                var _item_link;\n                const source = item.source || (((_item_link = item.link) === null || _item_link === void 0 ? void 0 : _item_link.includes(\"amazon.com\")) ? \"amazon\" : \"walmart\");\n                const url = \"https://api.scraperapi.com/structured/\".concat(source, \"/search\");\n                const params = {\n                    api_key: process.env.NEXT_PUBLIC_SCRAPER_API_KEY,\n                    query: item.title,\n                    country: \"us\"\n                };\n                const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(url, {\n                    params\n                });\n                const newData = response.data.results[0];\n                return {\n                    ...item,\n                    lastVerifiedPrice: (newData === null || newData === void 0 ? void 0 : newData.price) || item.lastVerifiedPrice || item.price,\n                    lastUpdated: new Date().toISOString()\n                };\n            } catch (error) {\n                console.error(\"Error refreshing item:\", error);\n                return item; // Return the original item if there's an error\n            }\n        }));\n        console.log(\"Updated items after refresh:\", updatedItems);\n        setList((prevList)=>{\n            const newList = {\n                ...prevList,\n                items: updatedItems\n            };\n            console.log(\"New list after refresh:\", newList);\n            return newList;\n        });\n        setLastRefresh(new Date().toISOString());\n        // Update localStorage\n        const listData = {\n            data: {\n                items: updatedItems\n            },\n            expiration: Date.now() + 30 * 24 * 60 * 60 * 1000,\n            lastRefresh: new Date().toISOString()\n        };\n        localStorage.setItem(\"list\", JSON.stringify(listData));\n        console.log(\"Updated localStorage after refresh\");\n    }, [\n        list.items\n    ]);\n    const clearList = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        console.log(\"Clearing list\");\n        setList({\n            items: []\n        });\n        localStorage.removeItem(\"list\");\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ListContext.Provider, {\n        value: {\n            list,\n            addToList,\n            removeFromList,\n            updateQuantity,\n            addNote,\n            clearList,\n            refreshList,\n            lastRefresh\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/dangnguyen/popstart/context/ListContext.js\",\n        lineNumber: 163,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(ListProvider, \"rqKCBK58FBqGbz8/ZAMnFJN4MKs=\");\n_c = ListProvider;\nvar _c;\n$RefreshReg$(_c, \"ListProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVE7Z0JBQUUzQixPQUFPK0I7WUFBYTtZQUNuRHpCLFFBQVFDLEdBQUcsQ0FBQywyQkFBMkIwRDtZQUN2QyxPQUFPQTtRQUNUO1FBQ0EvRCxlQUFlLElBQUlVLE9BQU80QixXQUFXO1FBRXJDLHNCQUFzQjtRQUN0QixNQUFNeEIsV0FBVztZQUNmRixNQUFNO2dCQUFFZCxPQUFPK0I7WUFBYTtZQUM1QnBCLFlBQVlDLEtBQUtDLEdBQUcsS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLO1lBQzdDWixhQUFhLElBQUlXLE9BQU80QixXQUFXO1FBQ3JDO1FBQ0FwQyxhQUFhYSxPQUFPLENBQUMsUUFBUVIsS0FBS1MsU0FBUyxDQUFDRjtRQUM1Q1YsUUFBUUMsR0FBRyxDQUFDO0lBQ2QsR0FBRztRQUFDVCxLQUFLRSxLQUFLO0tBQUM7SUFFZixNQUFNa0UsWUFBWTVFLGtEQUFXQSxDQUFDO1FBQzVCZ0IsUUFBUUMsR0FBRyxDQUFDO1FBQ1pSLFFBQVE7WUFBRUMsT0FBTyxFQUFFO1FBQUM7UUFDcEJJLGFBQWFXLFVBQVUsQ0FBQztJQUMxQixHQUFHLEVBQUU7SUFFTCxxQkFDRSw4REFBQ3ZCLFlBQVkyRSxRQUFRO1FBQUNDLE9BQU87WUFDM0J0RTtZQUNBMkI7WUFDQWdCO1lBQ0FFO1lBQ0FFO1lBQ0FxQjtZQUNBbkI7WUFDQTlDO1FBQ0Y7a0JBQ0dKOzs7Ozs7QUFHUCxFQUFFO0lBbEtXRDtLQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb250ZXh0L0xpc3RDb250ZXh0LmpzPzY1ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcblxuY29uc3QgTGlzdENvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5cbmV4cG9ydCBjb25zdCB1c2VMaXN0ID0gKCkgPT4ge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChMaXN0Q29udGV4dCk7XG4gIGlmICghY29udGV4dCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXNlTGlzdCBtdXN0IGJlIHVzZWQgd2l0aGluIGEgTGlzdFByb3ZpZGVyJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG5leHBvcnQgY29uc3QgTGlzdFByb3ZpZGVyID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICBjb25zdCBbbGlzdCwgc2V0TGlzdF0gPSB1c2VTdGF0ZSh7IGl0ZW1zOiBbXSB9KTtcbiAgY29uc3QgW2xhc3RSZWZyZXNoLCBzZXRMYXN0UmVmcmVzaF0gPSB1c2VTdGF0ZShudWxsKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHNhdmVkTGlzdCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdsaXN0Jyk7XG4gICAgY29uc29sZS5sb2coJ0luaXRpYWwgbG9hZCAtIFNhdmVkIGxpc3QgZnJvbSBsb2NhbFN0b3JhZ2U6Jywgc2F2ZWRMaXN0KTtcbiAgICBpZiAoc2F2ZWRMaXN0KSB7XG4gICAgICBjb25zdCBwYXJzZWRMaXN0ID0gSlNPTi5wYXJzZShzYXZlZExpc3QpO1xuICAgICAgY29uc29sZS5sb2coJ1BhcnNlZCBsaXN0OicsIHBhcnNlZExpc3QpO1xuICAgICAgaWYgKHBhcnNlZExpc3QuZXhwaXJhdGlvbiA+IERhdGUubm93KCkpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1NldHRpbmcgbGlzdCBmcm9tIGxvY2FsU3RvcmFnZScpO1xuICAgICAgICBzZXRMaXN0KHBhcnNlZExpc3QuZGF0YSk7XG4gICAgICAgIHNldExhc3RSZWZyZXNoKHBhcnNlZExpc3QubGFzdFJlZnJlc2gpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coJ0xpc3QgZXhwaXJlZCwgcmVtb3ZpbmcgZnJvbSBsb2NhbFN0b3JhZ2UnKTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ2xpc3QnKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIFtdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdMaXN0IGNoYW5nZWQsIHVwZGF0aW5nIGxvY2FsU3RvcmFnZScsIGxpc3QpO1xuICAgIGNvbnN0IGxpc3REYXRhID0ge1xuICAgICAgZGF0YTogbGlzdCxcbiAgICAgIGV4cGlyYXRpb246IERhdGUubm93KCkgKyAzMCAqIDI0ICogNjAgKiA2MCAqIDEwMDAsIC8vIDMwIGRheXMgZnJvbSBub3dcbiAgICAgIGxhc3RSZWZyZXNoXG4gICAgfTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbGlzdCcsIEpTT04uc3RyaW5naWZ5KGxpc3REYXRhKSk7XG4gIH0sIFtsaXN0LCBsYXN0UmVmcmVzaF0pO1xuXG4gIGNvbnN0IGdlbmVyYXRlVW5pcXVlSWQgPSAoaXRlbSkgPT4ge1xuICAgIHJldHVybiBgJHtpdGVtLmlkIHx8ICcnfS0ke2l0ZW0udGl0bGU/LnJlcGxhY2UoL1xccysvZywgJy0nKS5zbGljZSgwLCAyMCkgfHwgJyd9LSR7RGF0ZS5ub3coKX1gO1xuICB9O1xuXG4gIGNvbnN0IGFkZFRvTGlzdCA9IHVzZUNhbGxiYWNrKChuZXdJdGVtKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ0FkZGluZyBpdGVtIHRvIGxpc3Q6JywgbmV3SXRlbSk7XG4gICAgc2V0TGlzdCgocHJldkxpc3QpID0+IHtcbiAgICAgIGNvbnN0IGV4aXN0aW5nSXRlbUluZGV4ID0gcHJldkxpc3QuaXRlbXMuZmluZEluZGV4KGl0ZW0gPT4gXG4gICAgICAgIGl0ZW0uaWQgPT09IG5ld0l0ZW0uaWQgJiYgaXRlbS5zb3VyY2UgPT09IG5ld0l0ZW0uc291cmNlXG4gICAgICApO1xuXG4gICAgICBpZiAoZXhpc3RpbmdJdGVtSW5kZXggIT09IC0xKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdJdGVtIGFscmVhZHkgZXhpc3RzLCB1cGRhdGluZyBxdWFudGl0eScpO1xuICAgICAgICBjb25zdCB1cGRhdGVkSXRlbXMgPSBwcmV2TGlzdC5pdGVtcy5tYXAoKGl0ZW0sIGluZGV4KSA9PiBcbiAgICAgICAgICBpbmRleCA9PT0gZXhpc3RpbmdJdGVtSW5kZXggXG4gICAgICAgICAgICA/IHsgLi4uaXRlbSwgcXVhbnRpdHk6IChpdGVtLnF1YW50aXR5IHx8IDEpICsgMSB9XG4gICAgICAgICAgICA6IGl0ZW1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHsgLi4ucHJldkxpc3QsIGl0ZW1zOiB1cGRhdGVkSXRlbXMgfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdBZGRpbmcgbmV3IGl0ZW0gdG8gbGlzdCcpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnByZXZMaXN0LFxuICAgICAgICAgIGl0ZW1zOiBbLi4ucHJldkxpc3QuaXRlbXMsIHsgXG4gICAgICAgICAgICAuLi5uZXdJdGVtLCBcbiAgICAgICAgICAgIHVuaXF1ZUlkOiBnZW5lcmF0ZVVuaXF1ZUlkKG5ld0l0ZW0pLFxuICAgICAgICAgICAgcXVhbnRpdHk6IDEsIFxuICAgICAgICAgICAgb3JpZ2luYWxQcmljZTogbmV3SXRlbS5wcmljZSxcbiAgICAgICAgICAgIGxhc3RWZXJpZmllZFByaWNlOiBuZXdJdGVtLnByaWNlLFxuICAgICAgICAgICAgbGFzdFVwZGF0ZWQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgICAgICAgIH1dXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSk7XG4gIH0sIFtdKTtcblxuICBjb25zdCByZW1vdmVGcm9tTGlzdCA9IHVzZUNhbGxiYWNrKCh1bmlxdWVJZCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdSZW1vdmluZyBpdGVtIGZyb20gbGlzdDonLCB1bmlxdWVJZCk7XG4gICAgc2V0TGlzdCgocHJldkxpc3QpID0+ICh7XG4gICAgICAuLi5wcmV2TGlzdCxcbiAgICAgIGl0ZW1zOiBwcmV2TGlzdC5pdGVtcy5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0udW5pcXVlSWQgIT09IHVuaXF1ZUlkKVxuICAgIH0pKTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IHVwZGF0ZVF1YW50aXR5ID0gdXNlQ2FsbGJhY2soKHVuaXF1ZUlkLCBuZXdRdWFudGl0eSkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdVcGRhdGluZyBxdWFudGl0eTonLCB1bmlxdWVJZCwgbmV3UXVhbnRpdHkpO1xuICAgIHNldExpc3QoKHByZXZMaXN0KSA9PiB7XG4gICAgICBjb25zdCB1cGRhdGVkSXRlbXMgPSBwcmV2TGlzdC5pdGVtcy5tYXAoKGl0ZW0pID0+IHtcbiAgICAgICAgaWYgKGl0ZW0udW5pcXVlSWQgPT09IHVuaXF1ZUlkKSB7XG4gICAgICAgICAgcmV0dXJuIHsgLi4uaXRlbSwgcXVhbnRpdHk6IG5ld1F1YW50aXR5IH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgICB9KTtcbiAgICAgIHJldHVybiB7IC4uLnByZXZMaXN0LCBpdGVtczogdXBkYXRlZEl0ZW1zIH07XG4gICAgfSk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBhZGROb3RlID0gdXNlQ2FsbGJhY2soKHVuaXF1ZUlkLCBub3RlKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ0FkZGluZyBub3RlOicsIHVuaXF1ZUlkLCBub3RlKTtcbiAgICBzZXRMaXN0KChwcmV2TGlzdCkgPT4gKHtcbiAgICAgIC4uLnByZXZMaXN0LFxuICAgICAgaXRlbXM6IHByZXZMaXN0Lml0ZW1zLm1hcCgoaXRlbSkgPT5cbiAgICAgICAgaXRlbS51bmlxdWVJZCA9PT0gdW5pcXVlSWQgPyB7IC4uLml0ZW0sIG5vdGUgfSA6IGl0ZW1cbiAgICAgIClcbiAgICB9KSk7XG4gIH0sIFtdKTtcblxuICBjb25zdCByZWZyZXNoTGlzdCA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnUmVmcmVzaGluZyBsaXN0JywgbGlzdC5pdGVtcyk7XG4gICAgY29uc3QgdXBkYXRlZEl0ZW1zID0gYXdhaXQgUHJvbWlzZS5hbGwobGlzdC5pdGVtcy5tYXAoYXN5bmMgKGl0ZW0pID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHNvdXJjZSA9IGl0ZW0uc291cmNlIHx8IChpdGVtLmxpbms/LmluY2x1ZGVzKCdhbWF6b24uY29tJykgPyAnYW1hem9uJyA6ICd3YWxtYXJ0Jyk7XG4gICAgICAgIGNvbnN0IHVybCA9IGBodHRwczovL2FwaS5zY3JhcGVyYXBpLmNvbS9zdHJ1Y3R1cmVkLyR7c291cmNlfS9zZWFyY2hgO1xuICAgICAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICAgICAgYXBpX2tleTogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU0NSQVBFUl9BUElfS0VZLFxuICAgICAgICAgIHF1ZXJ5OiBpdGVtLnRpdGxlLFxuICAgICAgICAgIGNvdW50cnk6ICd1cydcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCh1cmwsIHsgcGFyYW1zIH0pO1xuICAgICAgICBjb25zdCBuZXdEYXRhID0gcmVzcG9uc2UuZGF0YS5yZXN1bHRzWzBdO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uaXRlbSxcbiAgICAgICAgICBsYXN0VmVyaWZpZWRQcmljZTogbmV3RGF0YT8ucHJpY2UgfHwgaXRlbS5sYXN0VmVyaWZpZWRQcmljZSB8fCBpdGVtLnByaWNlLFxuICAgICAgICAgIGxhc3RVcGRhdGVkOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICAgICAgfTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHJlZnJlc2hpbmcgaXRlbTonLCBlcnJvcik7XG4gICAgICAgIHJldHVybiBpdGVtOyAvLyBSZXR1cm4gdGhlIG9yaWdpbmFsIGl0ZW0gaWYgdGhlcmUncyBhbiBlcnJvclxuICAgICAgfVxuICAgIH0pKTtcblxuICAgIGNvbnNvbGUubG9nKCdVcGRhdGVkIGl0ZW1zIGFmdGVyIHJlZnJlc2g6JywgdXBkYXRlZEl0ZW1zKTtcbiAgICBzZXRMaXN0KHByZXZMaXN0ID0+IHtcbiAgICAgIGNvbnN0IG5ld0xpc3QgPSB7IC4uLnByZXZMaXN0LCBpdGVtczogdXBkYXRlZEl0ZW1zIH07XG4gICAgICBjb25zb2xlLmxvZygnTmV3IGxpc3QgYWZ0ZXIgcmVmcmVzaDonLCBuZXdMaXN0KTtcbiAgICAgIHJldHVybiBuZXdMaXN0O1xuICAgIH0pO1xuICAgIHNldExhc3RSZWZyZXNoKG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSk7XG5cbiAgICAvLyBVcGRhdGUgbG9jYWxTdG9yYWdlXG4gICAgY29uc3QgbGlzdERhdGEgPSB7XG4gICAgICBkYXRhOiB7IGl0ZW1zOiB1cGRhdGVkSXRlbXMgfSxcbiAgICAgIGV4cGlyYXRpb246IERhdGUubm93KCkgKyAzMCAqIDI0ICogNjAgKiA2MCAqIDEwMDAsXG4gICAgICBsYXN0UmVmcmVzaDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbGlzdCcsIEpTT04uc3RyaW5naWZ5KGxpc3REYXRhKSk7XG4gICAgY29uc29sZS5sb2coJ1VwZGF0ZWQgbG9jYWxTdG9yYWdlIGFmdGVyIHJlZnJlc2gnKTtcbiAgfSwgW2xpc3QuaXRlbXNdKTtcblxuICBjb25zdCBjbGVhckxpc3QgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ0NsZWFyaW5nIGxpc3QnKTtcbiAgICBzZXRMaXN0KHsgaXRlbXM6IFtdIH0pO1xuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdsaXN0Jyk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxMaXN0Q29udGV4dC5Qcm92aWRlciB2YWx1ZT17eyBcbiAgICAgIGxpc3QsIFxuICAgICAgYWRkVG9MaXN0LCBcbiAgICAgIHJlbW92ZUZyb21MaXN0LCBcbiAgICAgIHVwZGF0ZVF1YW50aXR5LCBcbiAgICAgIGFkZE5vdGUsIFxuICAgICAgY2xlYXJMaXN0LFxuICAgICAgcmVmcmVzaExpc3QsXG4gICAgICBsYXN0UmVmcmVzaCBcbiAgICB9fT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0xpc3RDb250ZXh0LlByb3ZpZGVyPlxuICApO1xufTsiXSwibmFtZXMiOlsiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlQ2FsbGJhY2siLCJheGlvcyIsIkxpc3RDb250ZXh0IiwidXNlTGlzdCIsImNvbnRleHQiLCJFcnJvciIsIkxpc3RQcm92aWRlciIsImNoaWxkcmVuIiwibGlzdCIsInNldExpc3QiLCJpdGVtcyIsImxhc3RSZWZyZXNoIiwic2V0TGFzdFJlZnJlc2giLCJzYXZlZExpc3QiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiY29uc29sZSIsImxvZyIsInBhcnNlZExpc3QiLCJKU09OIiwicGFyc2UiLCJleHBpcmF0aW9uIiwiRGF0ZSIsIm5vdyIsImRhdGEiLCJyZW1vdmVJdGVtIiwibGlzdERhdGEiLCJzZXRJdGVtIiwic3RyaW5naWZ5IiwiZ2VuZXJhdGVVbmlxdWVJZCIsIml0ZW0iLCJpZCIsInRpdGxlIiwicmVwbGFjZSIsInNsaWNlIiwiYWRkVG9MaXN0IiwibmV3SXRlbSIsInByZXZMaXN0IiwiZXhpc3RpbmdJdGVtSW5kZXgiLCJmaW5kSW5kZXgiLCJzb3VyY2UiLCJ1cGRhdGVkSXRlbXMiLCJtYXAiLCJpbmRleCIsInF1YW50aXR5IiwidW5pcXVlSWQiLCJvcmlnaW5hbFByaWNlIiwicHJpY2UiLCJsYXN0VmVyaWZpZWRQcmljZSIsImxhc3RVcGRhdGVkIiwidG9JU09TdHJpbmciLCJyZW1vdmVGcm9tTGlzdCIsImZpbHRlciIsInVwZGF0ZVF1YW50aXR5IiwibmV3UXVhbnRpdHkiLCJhZGROb3RlIiwibm90ZSIsInJlZnJlc2hMaXN0IiwiUHJvbWlzZSIsImFsbCIsImxpbmsiLCJpbmNsdWRlcyIsInVybCIsInBhcmFtcyIsImFwaV9rZXkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU0NSQVBFUl9BUElfS0VZIiwicXVlcnkiLCJjb3VudHJ5IiwicmVzcG9uc2UiLCJnZXQiLCJuZXdEYXRhIiwicmVzdWx0cyIsImVycm9yIiwibmV3TGlzdCIsImNsZWFyTGlzdCIsIlByb3ZpZGVyIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./context/ListContext.js\n"));

/***/ })

});