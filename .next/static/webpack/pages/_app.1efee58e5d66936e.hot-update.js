"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./context/ListContext.js":
/*!********************************!*\
  !*** ./context/ListContext.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ListProvider: function() { return /* binding */ ListProvider; },\n/* harmony export */   useList: function() { return /* binding */ useList; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst ListContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst useList = ()=>{\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ListContext);\n    if (!context) {\n        throw new Error(\"useList must be used within a ListProvider\");\n    }\n    return context;\n};\n_s(useList, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst ListProvider = (param)=>{\n    let { children } = param;\n    _s1();\n    const [list, setList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        items: []\n    });\n    const [lastRefresh, setLastRefresh] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"ListProvider mounted\");\n        const savedList = localStorage.getItem(\"list\");\n        console.log(\"Initial load - Saved list from localStorage:\", savedList);\n        if (savedList) {\n            try {\n                const parsedList = JSON.parse(savedList);\n                console.log(\"Parsed list:\", parsedList);\n                if (parsedList.expiration > Date.now()) {\n                    console.log(\"List is not expired, setting list from localStorage\");\n                    setList(parsedList.data);\n                    setLastRefresh(parsedList.lastRefresh);\n                } else {\n                    console.log(\"List is expired, removing from localStorage\");\n                    localStorage.removeItem(\"list\");\n                }\n            } catch (error) {\n                console.error(\"Error parsing saved list:\", error);\n            }\n        } else {\n            console.log(\"No saved list found in localStorage\");\n        }\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"List or lastRefresh changed, updating localStorage\", {\n            list,\n            lastRefresh\n        });\n        const listData = {\n            data: list,\n            expiration: Date.now() + 30 * 24 * 60 * 60 * 1000,\n            lastRefresh\n        };\n        localStorage.setItem(\"list\", JSON.stringify(listData));\n        console.log(\"Updated localStorage with new list data\");\n    }, [\n        list,\n        lastRefresh\n    ]);\n    const generateUniqueId = (item)=>{\n        const idParts = [\n            item.id,\n            item.asin,\n            item.source,\n            item.title,\n            item.brand,\n            item.price\n        ].filter(Boolean);\n        return idParts.join(\"-\").replace(/[^a-zA-Z0-9-]/g, \"-\").toLowerCase();\n    };\n    const addToList = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((newItem)=>{\n        console.log(\"Adding item to list:\", newItem);\n        setList((prevList)=>{\n            console.log(\"Previous list state:\", prevList);\n            const uniqueId = generateUniqueId(newItem);\n            const existingItemIndex = prevList.items.findIndex((item)=>generateUniqueId(item) === uniqueId);\n            let updatedList;\n            if (existingItemIndex !== -1) {\n                console.log(\"Item already exists, updating quantity\");\n                const updatedItems = prevList.items.map((item, index)=>index === existingItemIndex ? {\n                        ...item,\n                        quantity: (item.quantity || 1) + 1\n                    } : item);\n                updatedList = {\n                    ...prevList,\n                    items: updatedItems\n                };\n            } else {\n                console.log(\"Adding new item to list\");\n                updatedList = {\n                    ...prevList,\n                    items: [\n                        ...prevList.items,\n                        {\n                            ...newItem,\n                            uniqueId,\n                            quantity: 1,\n                            originalPrice: newItem.price,\n                            lastVerifiedPrice: newItem.price,\n                            lastUpdated: new Date().toISOString()\n                        }\n                    ]\n                };\n            }\n            console.log(\"Updated list state:\", updatedList);\n            return updatedList;\n        });\n    }, []);\n    const removeFromList = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((uniqueId)=>{\n        console.log(\"Removing item from list:\", uniqueId);\n        setList((prevList)=>{\n            const updatedList = {\n                ...prevList,\n                items: prevList.items.filter((item)=>item.uniqueId !== uniqueId)\n            };\n            console.log(\"Updated list after removal:\", updatedList);\n            return updatedList;\n        });\n    }, []);\n    const updateQuantity = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((uniqueId, newQuantity)=>{\n        console.log(\"Updating quantity:\", uniqueId, newQuantity);\n        setList((prevList)=>{\n            const updatedItems = prevList.items.map((item)=>{\n                if (item.uniqueId === uniqueId) {\n                    return {\n                        ...item,\n                        quantity: newQuantity\n                    };\n                }\n                return item;\n            });\n            const updatedList = {\n                ...prevList,\n                items: updatedItems\n            };\n            console.log(\"Updated list after quantity change:\", updatedList);\n            return updatedList;\n        });\n    }, []);\n    const addNote = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((uniqueId, note)=>{\n        console.log(\"Adding note:\", uniqueId, note);\n        setList((prevList)=>{\n            const updatedItems = prevList.items.map((item)=>item.uniqueId === uniqueId ? {\n                    ...item,\n                    note\n                } : item);\n            const updatedList = {\n                ...prevList,\n                items: updatedItems\n            };\n            console.log(\"Updated list after adding note:\", updatedList);\n            return updatedList;\n        });\n    }, []);\n    const refreshList = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        console.log(\"Refreshing list, current items:\", list.items);\n        if (list.items.length === 0) {\n            console.log(\"List is empty, nothing to refresh\");\n            return;\n        }\n        const updatedItems = await Promise.all(list.items.map(async (item)=>{\n            try {\n                var _item_link;\n                const source = item.source || (((_item_link = item.link) === null || _item_link === void 0 ? void 0 : _item_link.includes(\"amazon.com\")) ? \"amazon\" : \"walmart\");\n                const url = \"https://api.scraperapi.com/structured/\".concat(source, \"/search\");\n                const params = {\n                    api_key: process.env.NEXT_PUBLIC_SCRAPER_API_KEY,\n                    query: item.title,\n                    country: \"us\"\n                };\n                console.log(\"Fetching data for item: \".concat(item.title));\n                const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(url, {\n                    params\n                });\n                const newData = response.data.results[0];\n                if (newData && newData.price) {\n                    console.log(\"Updated price for \".concat(item.title, \": \").concat(newData.price));\n                    return {\n                        ...item,\n                        lastVerifiedPrice: newData.price,\n                        lastUpdated: new Date().toISOString()\n                    };\n                } else {\n                    console.log(\"No new data for \".concat(item.title, \", keeping original\"));\n                    return item;\n                }\n            } catch (error) {\n                console.error(\"Error refreshing item \".concat(item.title, \":\"), error);\n                return item; // Return the original item if there's an error\n            }\n        }));\n        console.log(\"Updated items after refresh:\", updatedItems);\n        if (updatedItems.length > 0) {\n            setList((prevList)=>{\n                const newList = {\n                    ...prevList,\n                    items: updatedItems\n                };\n                console.log(\"New list after refresh:\", newList);\n                return newList;\n            });\n            setLastRefresh(new Date().toISOString());\n            // Update localStorage\n            const listData = {\n                data: {\n                    items: updatedItems\n                },\n                expiration: Date.now() + 30 * 24 * 60 * 60 * 1000,\n                lastRefresh: new Date().toISOString()\n            };\n            localStorage.setItem(\"list\", JSON.stringify(listData));\n            console.log(\"Updated localStorage after refresh\");\n        } else {\n            console.log(\"No items were updated during refresh\");\n        }\n    }, [\n        list.items\n    ]);\n    const clearList = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        console.log(\"Clearing list\");\n        setList({\n            items: []\n        });\n        localStorage.removeItem(\"list\");\n        console.log(\"List cleared and removed from localStorage\");\n    }, []);\n    console.log(\"Rendering ListProvider, current list:\", list);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ListContext.Provider, {\n        value: {\n            list,\n            addToList,\n            removeFromList,\n            updateQuantity,\n            addNote,\n            clearList,\n            refreshList,\n            lastRefresh\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/dangnguyen/popstart/context/ListContext.js\",\n        lineNumber: 209,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(ListProvider, \"rqKCBK58FBqGbz8/ZAMnFJN4MKs=\");\n_c = ListProvider;\nvar _c;\n$RefreshReg$(_c, \"ListProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/ListContext.js\n"));

/***/ })

});