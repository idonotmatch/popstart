"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/search";
exports.ids = ["pages/api/search"];
exports.modules = {

/***/ "ioredis":
/*!**************************!*\
  !*** external "ioredis" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("ioredis");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("pg");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsearch&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsearch.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsearch&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsearch.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_search_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/search.js */ \"(api)/./pages/api/search.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_search_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_search_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_search_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_search_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/search\",\n        pathname: \"/api/search\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_search_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnNlYXJjaCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGc2VhcmNoLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ2tEO0FBQ2xEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxpREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsaURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktZ3JhcGhxbC1wcm9qZWN0Lz85YzRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvc2VhcmNoLmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc2VhcmNoXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvc2VhcmNoXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsearch&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsearch.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/search.js":
/*!*****************************!*\
  !*** ./pages/api/search.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var ioredis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ioredis */ \"ioredis\");\n/* harmony import */ var ioredis__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ioredis__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pg */ \"pg\");\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(pg__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Initialize Redis client with fallback\nlet redisClient;\ntry {\n    redisClient = new (ioredis__WEBPACK_IMPORTED_MODULE_1___default())(process.env.REDIS_URL, {\n        maxRetriesPerRequest: 1,\n        retryStrategy: ()=>null\n    });\n    redisClient.on(\"error\", (err)=>{\n        console.warn(\"Redis Client Error:\", err);\n        redisClient = null; // Disable Redis client on error\n    });\n} catch (error) {\n    console.warn(\"Failed to initialize Redis:\", error);\n    redisClient = null;\n}\n// Initialize PostgreSQL connection pool\nlet pool;\ntry {\n    pool = new pg__WEBPACK_IMPORTED_MODULE_2__.Pool({\n        connectionString: process.env.DATABASE_URL,\n        ssl: {\n            rejectUnauthorized: false\n        }\n    });\n    // Test the connection\n    pool.query(\"SELECT NOW()\", (err, res)=>{\n        if (err) {\n            console.error(\"Error connecting to the database:\", err);\n        } else {\n            console.log(\"Successfully connected to the database\");\n        }\n    });\n} catch (error) {\n    console.error(\"Failed to initialize database pool:\", error);\n}\n// Cache helper function\nconst cacheHelper = {\n    get: async (key)=>{\n        if (redisClient) {\n            try {\n                return await redisClient.get(key);\n            } catch (error) {\n                console.warn(\"Redis get error:\", error);\n            }\n        }\n        return null;\n    },\n    set: async (key, value, options)=>{\n        if (redisClient) {\n            try {\n                await redisClient.set(key, value, options);\n            } catch (error) {\n                console.warn(\"Redis set error:\", error);\n            }\n        }\n    }\n};\nconst mapProduct = (item, source)=>{\n    console.log(`Mapping product from ${source}:`, JSON.stringify(item, null, 2));\n    if (source === \"walmart\") {\n        return {\n            id: item.id || \"\",\n            brand: item.brand || \"N/A\",\n            title: item.name || \"\",\n            link: item.url || \"\",\n            image: item.image || \"\",\n            isPrime: false,\n            rating: item.rating?.average_rating ? Number(item.rating.average_rating).toFixed(1) : \"0.0\",\n            ratingsTotal: item.rating?.number_of_reviews || 0,\n            price: item.price ? `${item.price_currency || \"$\"}${Number(item.price).toFixed(2)}` : \"N/A\",\n            availability: item.availability || \"Unavailable\",\n            source: \"walmart\",\n            sponsored: item.sponsored || false,\n            full_description: item.full_description || \"\",\n            product_category: item.product_category || \"\",\n            model: item.model || \"\",\n            small_description: item.small_description || \"\"\n        };\n    } else if (source === \"amazon\") {\n        return {\n            asin: item.asin || \"\",\n            brand: item.brand || \"N/A\",\n            title: item.name || item.title || \"\",\n            link: item.url || item.link || \"\",\n            image: item.image || item.images && item.images[0] || \"\",\n            isPrime: item.has_prime || item.isPrime || false,\n            rating: item.stars || item.average_rating ? Number(item.stars || item.average_rating).toFixed(1) : \"0.0\",\n            ratingsTotal: item.total_reviews || item.ratings_total || 0,\n            price: item.price || item.pricing || \"N/A\",\n            availability: item.availability || \"Unavailable\",\n            source: \"amazon\",\n            sponsored: item.sponsored || false,\n            full_description: item.full_description || \"\",\n            product_category: item.product_category || \"\",\n            model: item.model || \"\",\n            small_description: item.small_description || \"\"\n        };\n    }\n};\nconst filterSponsoredProducts = (products)=>{\n    return products.filter((product)=>!product.sponsored);\n};\nconst insertProduct = async (product)=>{\n    if (!pool) {\n        console.error(\"Database pool not initialized\");\n        return;\n    }\n    const client = await pool.connect();\n    try {\n        await client.query(\"BEGIN\");\n        // Insert into products table\n        const productQuery = `\n      INSERT INTO products (retailer_id, source, title, brand, image_url, link, full_description, product_category)\n      VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n      ON CONFLICT (retailer_id, source) DO UPDATE\n      SET title = EXCLUDED.title, brand = EXCLUDED.brand, image_url = EXCLUDED.image_url, \n          link = EXCLUDED.link, full_description = EXCLUDED.full_description, \n          product_category = EXCLUDED.product_category\n      RETURNING product_id\n    `;\n        const productValues = [\n            product.id || product.asin,\n            product.source,\n            product.title,\n            product.brand,\n            product.image,\n            product.link,\n            product.full_description,\n            product.product_category\n        ];\n        const productResult = await client.query(productQuery, productValues);\n        const productId = productResult.rows[0].product_id;\n        // Insert into product_details table\n        const detailsQuery = `\n      INSERT INTO product_details (product_id, rating, ratings_total, is_prime, model, small_description)\n      VALUES ($1, $2, $3, $4, $5, $6)\n      ON CONFLICT (product_id) DO UPDATE\n      SET rating = EXCLUDED.rating, ratings_total = EXCLUDED.ratings_total, \n          is_prime = EXCLUDED.is_prime, model = EXCLUDED.model, \n          small_description = EXCLUDED.small_description\n    `;\n        const detailsValues = [\n            productId,\n            parseFloat(product.rating) || null,\n            parseInt(product.ratingsTotal) || null,\n            product.isPrime || false,\n            product.model,\n            product.small_description\n        ];\n        await client.query(detailsQuery, detailsValues);\n        // Insert into price_history table\n        if (product.price && product.price !== \"N/A\") {\n            const priceQuery = `\n        INSERT INTO price_history (product_id, price, availability)\n        VALUES ($1, $2, $3)\n      `;\n            const priceValues = [\n                productId,\n                parseFloat(product.price.replace(/[^0-9.-]+/g, \"\")) || null,\n                product.availability || \"Unknown\"\n            ];\n            await client.query(priceQuery, priceValues);\n        }\n        await client.query(\"COMMIT\");\n        console.log(`Inserted/Updated product in database: ${product.title}`);\n    } catch (e) {\n        await client.query(\"ROLLBACK\");\n        console.error(\"Error inserting/updating product in database:\", e);\n    } finally{\n        client.release();\n    }\n};\nconst fetchProducts = async (term, source, sortBy, page = 1)=>{\n    let url;\n    let params;\n    // Remove any quotes from the API key\n    const apiKey = process.env.SCRAPER_API_KEY.replace(/[''\"]+/g, \"\");\n    if (source === \"amazon\") {\n        if (term.match(/^[A-Z0-9]{10}$/)) {\n            url = `https://api.scraperapi.com/structured/amazon/product`;\n            params = {\n                api_key: apiKey,\n                asin: term,\n                country_code: \"us\",\n                tld: \"com\"\n            };\n        } else {\n            url = `https://api.scraperapi.com/structured/amazon/search`;\n            params = {\n                api_key: apiKey,\n                query: term,\n                country: \"us\",\n                page: page.toString(),\n                sort_by: sortBy || \"\",\n                exclude_sponsored: \"true\"\n            };\n        }\n    } else if (source === \"walmart\") {\n        if (term.match(/^[0-9]+$/)) {\n            url = `https://api.scraperapi.com/structured/walmart/product`;\n            params = {\n                api_key: apiKey,\n                product_id: term,\n                country_code: \"us\",\n                tld: \"com\"\n            };\n        } else {\n            url = `https://api.scraperapi.com/structured/walmart/search`;\n            params = {\n                api_key: apiKey,\n                query: term,\n                country: \"us\",\n                page: page.toString(),\n                sort_by: sortBy || \"\",\n                exclude_sponsored: \"true\"\n            };\n        }\n    }\n    try {\n        console.log(`Fetching ${source} results for term: \"${term}\", page: ${page}, sortBy: ${sortBy}`);\n        console.log(\"API Request URL:\", url);\n        console.log(\"API Request Params:\", {\n            ...params,\n            api_key: \"[REDACTED]\"\n        });\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(url, {\n            params,\n            timeout: 30000\n        });\n        console.log(`Raw API response from ${source}:`, JSON.stringify(response.data, null, 2));\n        let jsonData = response.data;\n        if (source === \"amazon\" && term.match(/^[A-Z0-9]{10}$/) || source === \"walmart\" && term.match(/^[0-9]+$/)) {\n            // If it's a product query, wrap the result in an array\n            const mappedProduct = mapProduct(jsonData, source);\n            await insertProduct(mappedProduct);\n            return {\n                results: [\n                    mappedProduct\n                ],\n                totalPages: 1\n            };\n        } else {\n            // For search queries, process as before\n            let results = [];\n            let totalPages = 1;\n            if (source === \"walmart\" && jsonData.items && Array.isArray(jsonData.items)) {\n                results = jsonData.items;\n                totalPages = jsonData.total_pages || 1;\n            } else if (source === \"amazon\" && jsonData.results) {\n                results = jsonData.results;\n                totalPages = jsonData.total_pages || 1;\n            } else {\n                console.error(`Invalid API response structure from ${source}:`, jsonData);\n                throw new Error(`Invalid API response structure from ${source}`);\n            }\n            const mappedResults = results.map((item)=>mapProduct(item, source));\n            console.log(`Mapped results for ${source}:`, JSON.stringify(mappedResults, null, 2));\n            // Insert all products into the database\n            for (const product of mappedResults){\n                await insertProduct(product);\n            }\n            return {\n                results: filterSponsoredProducts(mappedResults),\n                totalPages\n            };\n        }\n    } catch (error) {\n        console.error(`Error fetching data from ${source} API:`, error.message);\n        console.error(`Error details:`, error.response ? error.response.data : \"No response data\");\n        throw error;\n    }\n};\nasync function handler(req, res) {\n    if (req.method !== \"GET\") {\n        return res.status(405).end();\n    }\n    const { term, page = \"1\", sort_by, source = \"all\" } = req.query;\n    res.setHeader(\"Content-Type\", \"application/json\");\n    const results = [];\n    const streamResults = async (sourceToFetch)=>{\n        const cacheKey = `search:${sourceToFetch}:${term}:${sort_by}:${page}`;\n        try {\n            const cachedResults = await cacheHelper.get(cacheKey);\n            if (cachedResults) {\n                console.log(`Using cached results for ${sourceToFetch}`);\n                results.push({\n                    source: sourceToFetch,\n                    ...JSON.parse(cachedResults)\n                });\n            } else {\n                console.log(`Fetching fresh results for ${sourceToFetch}`);\n                const { results: sourceResults, totalPages } = await fetchProducts(term, sourceToFetch, sort_by, parseInt(page));\n                results.push({\n                    source: sourceToFetch,\n                    results: sourceResults,\n                    totalPages\n                });\n                await cacheHelper.set(cacheKey, JSON.stringify({\n                    results: sourceResults,\n                    totalPages\n                }), {\n                    EX: 3600\n                }); // Cache for 1 hour\n            }\n        } catch (error) {\n            console.error(`Error streaming results from ${sourceToFetch}:`, error.message);\n            results.push({\n                source: sourceToFetch,\n                error: `Failed to fetch data from ${sourceToFetch}: ${error.message}`,\n                details: error.response ? error.response.data : \"No response data\"\n            });\n        }\n    };\n    if (source === \"all\") {\n        await Promise.all([\n            streamResults(\"walmart\"),\n            streamResults(\"amazon\")\n        ]);\n    } else {\n        await streamResults(source);\n    }\n    res.status(200).json(results);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/search.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsearch&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsearch.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();