"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/search";
exports.ids = ["pages/api/search"];
exports.modules = {

/***/ "ioredis":
/*!**************************!*\
  !*** external "ioredis" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("ioredis");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("pg");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsearch&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsearch.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsearch&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsearch.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_search_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/search.js */ \"(api)/./pages/api/search.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_search_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_search_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_search_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_search_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/search\",\n        pathname: \"/api/search\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_search_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnNlYXJjaCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGc2VhcmNoLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ2tEO0FBQ2xEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxpREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsaURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktZ3JhcGhxbC1wcm9qZWN0Lz85YzRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvc2VhcmNoLmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc2VhcmNoXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvc2VhcmNoXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsearch&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsearch.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/db.js":
/*!*******************!*\
  !*** ./lib/db.js ***!
  \*******************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { Pool } = __webpack_require__(/*! pg */ \"pg\");\n// Create a new pool using the DATABASE_URL environment variable\nconst pool = new Pool({\n    connectionString: process.env.DATABASE_URL,\n    ssl: {\n        rejectUnauthorized: false // Required for some hosting platforms\n    }\n});\n// Helper function to process API results\nfunction processApiResults(results, source) {\n    return results.map((item)=>({\n            source: source,\n            product_id: item.id || item.asin,\n            name: item.name || item.title,\n            brand: item.brand || \"\",\n            price: parseFloat(item.price) || parseFloat(item.price_string?.replace(\"$\", \"\")),\n            image_url: item.image,\n            product_url: item.url || item.link,\n            rating: parseFloat(item.rating?.average_rating || item.stars),\n            review_count: parseInt(item.rating?.number_of_reviews || item.total_reviews),\n            availability: item.availability || \"In stock\",\n            full_description: item.full_description || \"\",\n            small_description: item.small_description || \"\",\n            product_category: item.product_category || \"\",\n            model: item.model || \"\",\n            shipping_price: parseFloat(item.shipping_price) || null,\n            shipping_time: item.shipping_time || \"\",\n            is_coupon_exists: item.is_coupon_exists || false,\n            coupon_text: item.coupon_text || \"\",\n            feature_bullets: Array.isArray(item.feature_bullets) ? item.feature_bullets : [],\n            brand_url: item.brand_url || \"\",\n            shipping_condition: item.shipping_condition || \"\",\n            fabric_type: item.fabric_type || \"\",\n            care_instructions: item.care_instructions || \"\",\n            origin: item.origin || \"\",\n            pattern: item.pattern || \"\",\n            country_of_origin: item.country_of_origin || \"\"\n        }));\n}\n// Function to insert or update products\nasync function insertProducts(products) {\n    const client = await pool.connect();\n    try {\n        await client.query(\"BEGIN\");\n        for (let product of products){\n            const query = `\n        INSERT INTO products (\n          source, product_id, name, brand, price, image_url, product_url, rating, review_count, availability,\n          full_description, small_description, product_category, model, shipping_price, shipping_time,\n          is_coupon_exists, coupon_text, feature_bullets, brand_url, shipping_condition, fabric_type,\n          care_instructions, origin, pattern, country_of_origin\n        )\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26)\n        ON CONFLICT (source, product_id) DO UPDATE SET\n        name = EXCLUDED.name,\n        brand = EXCLUDED.brand,\n        price = EXCLUDED.price,\n        image_url = EXCLUDED.image_url,\n        product_url = EXCLUDED.product_url,\n        rating = EXCLUDED.rating,\n        review_count = EXCLUDED.review_count,\n        availability = EXCLUDED.availability,\n        full_description = EXCLUDED.full_description,\n        small_description = EXCLUDED.small_description,\n        product_category = EXCLUDED.product_category,\n        model = EXCLUDED.model,\n        shipping_price = EXCLUDED.shipping_price,\n        shipping_time = EXCLUDED.shipping_time,\n        is_coupon_exists = EXCLUDED.is_coupon_exists,\n        coupon_text = EXCLUDED.coupon_text,\n        feature_bullets = EXCLUDED.feature_bullets,\n        brand_url = EXCLUDED.brand_url,\n        shipping_condition = EXCLUDED.shipping_condition,\n        fabric_type = EXCLUDED.fabric_type,\n        care_instructions = EXCLUDED.care_instructions,\n        origin = EXCLUDED.origin,\n        pattern = EXCLUDED.pattern,\n        country_of_origin = EXCLUDED.country_of_origin,\n        updated_at = CURRENT_TIMESTAMP\n      `;\n            const values = [\n                product.source,\n                product.product_id,\n                product.name,\n                product.brand,\n                product.price,\n                product.image_url,\n                product.product_url,\n                product.rating,\n                product.review_count,\n                product.availability,\n                product.full_description,\n                product.small_description,\n                product.product_category,\n                product.model,\n                product.shipping_price,\n                product.shipping_time,\n                product.is_coupon_exists,\n                product.coupon_text,\n                JSON.stringify(product.feature_bullets),\n                product.brand_url,\n                product.shipping_condition,\n                product.fabric_type,\n                product.care_instructions,\n                product.origin,\n                product.pattern,\n                product.country_of_origin\n            ];\n            await client.query(query, values);\n        }\n        await client.query(\"COMMIT\");\n        console.log(\"Products inserted/updated successfully\");\n    } catch (e) {\n        await client.query(\"ROLLBACK\");\n        throw e;\n    } finally{\n        client.release();\n    }\n}\n// Function to retrieve products\nasync function getProducts(source, limit = 10) {\n    const query = \"SELECT * FROM products WHERE source = $1 ORDER BY created_at DESC LIMIT $2\";\n    try {\n        const result = await pool.query(query, [\n            source,\n            limit\n        ]);\n        return result.rows;\n    } catch (e) {\n        console.error(\"Error fetching products:\", e);\n        return [];\n    }\n}\n// Function to retrieve a specific product\nasync function getSpecificProduct(source, productId) {\n    const query = \"SELECT * FROM products WHERE source = $1 AND product_id = $2\";\n    try {\n        const result = await pool.query(query, [\n            source,\n            productId\n        ]);\n        return result.rows[0] || null;\n    } catch (e) {\n        console.error(\"Error fetching specific product:\", e);\n        return null;\n    }\n}\n// Function to store API results\nasync function storeApiResults(amazonResults, walmartResults) {\n    const amazonProducts = processApiResults(amazonResults, \"amazon\");\n    const walmartProducts = processApiResults(walmartResults, \"walmart\");\n    try {\n        await insertProducts([\n            ...amazonProducts,\n            ...walmartProducts\n        ]);\n        console.log(\"API results stored successfully\");\n    } catch (e) {\n        console.error(\"Error storing API results:\", e);\n    }\n}\n// New function to update product price and add to price history\nasync function updateProductPrice(productId, source, currentPrice, originalPrice = null) {\n    const client = await pool.connect();\n    try {\n        await client.query(\"BEGIN\");\n        // Update the product's current price\n        const updateProductQuery = `\n      UPDATE products\n      SET price = $1, updated_at = CURRENT_TIMESTAMP\n      WHERE product_id = $2 AND source = $3\n    `;\n        await client.query(updateProductQuery, [\n            currentPrice,\n            productId,\n            source\n        ]);\n        // Add entry to price history\n        const insertPriceHistoryQuery = `\n      INSERT INTO price_history (product_id, source, current_price, original_price)\n      VALUES ($1, $2, $3, $4)\n    `;\n        await client.query(insertPriceHistoryQuery, [\n            productId,\n            source,\n            currentPrice,\n            originalPrice\n        ]);\n        await client.query(\"COMMIT\");\n        console.log(`Price updated for product ${productId}`);\n    } catch (e) {\n        await client.query(\"ROLLBACK\");\n        console.error(\"Error updating product price:\", e);\n        throw e;\n    } finally{\n        client.release();\n    }\n}\n// New function to get price history for a product\nasync function getProductPriceHistory(productId, source) {\n    const query = `\n    SELECT * FROM price_history\n    WHERE product_id = $1 AND source = $2\n    ORDER BY timestamp DESC\n  `;\n    try {\n        const result = await pool.query(query, [\n            productId,\n            source\n        ]);\n        return result.rows;\n    } catch (e) {\n        console.error(\"Error fetching price history:\", e);\n        return [];\n    }\n}\nmodule.exports = {\n    pool,\n    processApiResults,\n    insertProducts,\n    getProducts,\n    getSpecificProduct,\n    storeApiResults,\n    updateProductPrice,\n    getProductPriceHistory\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/db.js\n");

/***/ }),

/***/ "(api)/./pages/api/search.js":
/*!*****************************!*\
  !*** ./pages/api/search.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cacheHelper: () => (/* binding */ cacheHelper),\n/* harmony export */   \"default\": () => (/* binding */ handler),\n/* harmony export */   fetchProducts: () => (/* binding */ fetchProducts),\n/* harmony export */   mapProduct: () => (/* binding */ mapProduct),\n/* harmony export */   streamResults: () => (/* binding */ streamResults)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var ioredis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ioredis */ \"ioredis\");\n/* harmony import */ var ioredis__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ioredis__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/db */ \"(api)/./lib/db.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_lib_db__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Initialize Redis client with fallback\nlet redisClient;\ntry {\n    redisClient = new (ioredis__WEBPACK_IMPORTED_MODULE_1___default())(process.env.REDIS_URL, {\n        maxRetriesPerRequest: 1,\n        retryStrategy: ()=>null\n    });\n    redisClient.on(\"error\", (err)=>{\n        console.warn(\"Redis Client Error:\", err);\n        redisClient = null; // Disable Redis client on error\n    });\n} catch (error) {\n    console.warn(\"Failed to initialize Redis:\", error);\n    redisClient = null;\n}\n// Cache helper function\nconst cacheHelper = {\n    get: async (key)=>{\n        if (redisClient) {\n            try {\n                return await redisClient.get(key);\n            } catch (error) {\n                console.warn(\"Redis get error:\", error);\n            }\n        }\n        return null;\n    },\n    set: async (key, value, options)=>{\n        if (redisClient) {\n            try {\n                await redisClient.set(key, value, options);\n            } catch (error) {\n                console.warn(\"Redis set error:\", error);\n            }\n        }\n    }\n};\nconst mapProduct = (item, source)=>{\n    console.log(`Mapping product from ${source}:`, JSON.stringify(item, null, 2));\n    const parsePrice = (price)=>{\n        if (typeof price === \"number\") return price;\n        if (typeof price === \"string\") return Number(price.replace(/[^0-9.-]+/g, \"\"));\n        return null;\n    };\n    if (source === \"walmart\") {\n        return {\n            source: \"walmart\",\n            product_id: item.id || \"\",\n            name: item.name || \"\",\n            brand: item.brand || \"N/A\",\n            price: parsePrice(item.price),\n            image_url: item.image || \"\",\n            product_url: item.url || \"\",\n            rating: item.rating?.average_rating ? Number(item.rating.average_rating) : null,\n            review_count: item.rating?.number_of_reviews || 0,\n            availability: item.availability || \"Unavailable\",\n            full_description: item.full_description || \"\",\n            product_category: item.product_category || \"\",\n            model: item.model || \"\",\n            small_description: item.small_description || \"\"\n        };\n    } else if (source === \"amazon\") {\n        return {\n            source: \"amazon\",\n            product_id: item.asin || \"\",\n            name: item.name || item.title || \"\",\n            brand: item.brand || \"N/A\",\n            price: parsePrice(item.price),\n            image_url: item.image || item.images && item.images[0] || \"\",\n            product_url: item.url || item.link || \"\",\n            rating: item.stars ? Number(item.stars) : null,\n            review_count: item.total_reviews || item.ratings_total || 0,\n            availability: item.availability || \"Unavailable\",\n            full_description: item.full_description || \"\",\n            product_category: item.product_category || \"\",\n            model: item.model || \"\",\n            small_description: item.small_description || \"\"\n        };\n    }\n};\nconst filterSponsoredProducts = (products)=>{\n    return products.filter((product)=>!product.sponsored);\n};\nconst fetchProducts = async (term, source, sortBy, page = 1)=>{\n    let url;\n    let params;\n    // Remove any quotes from the API key\n    const apiKey = process.env.SCRAPER_API_KEY.replace(/[''\"]+/g, \"\");\n    if (source === \"amazon\") {\n        if (term.match(/^[A-Z0-9]{10}$/)) {\n            url = `https://api.scraperapi.com/structured/amazon/product`;\n            params = {\n                api_key: apiKey,\n                asin: term,\n                country_code: \"us\",\n                tld: \"com\"\n            };\n        } else {\n            url = `https://api.scraperapi.com/structured/amazon/search`;\n            params = {\n                api_key: apiKey,\n                query: term,\n                country: \"us\",\n                page: page.toString(),\n                sort_by: sortBy || \"\",\n                exclude_sponsored: \"true\"\n            };\n        }\n    } else if (source === \"walmart\") {\n        if (term.match(/^[0-9]+$/)) {\n            url = `https://api.scraperapi.com/structured/walmart/product`;\n            params = {\n                api_key: apiKey,\n                product_id: term,\n                country_code: \"us\",\n                tld: \"com\"\n            };\n        } else {\n            url = `https://api.scraperapi.com/structured/walmart/search`;\n            params = {\n                api_key: apiKey,\n                query: term,\n                country: \"us\",\n                page: page.toString(),\n                sort_by: sortBy || \"\",\n                exclude_sponsored: \"true\"\n            };\n        }\n    }\n    try {\n        console.log(`Fetching ${source} results for term: \"${term}\", page: ${page}, sortBy: ${sortBy}`);\n        console.log(\"API Request URL:\", url);\n        console.log(\"API Request Params:\", {\n            ...params,\n            api_key: \"[REDACTED]\"\n        });\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(url, {\n            params,\n            timeout: 30000\n        });\n        console.log(`Raw API response from ${source}:`, JSON.stringify(response.data, null, 2));\n        let jsonData = response.data;\n        if (source === \"amazon\" && term.match(/^[A-Z0-9]{10}$/) || source === \"walmart\" && term.match(/^[0-9]+$/)) {\n            // If it's a product query, wrap the result in an array\n            const mappedProduct = mapProduct(jsonData, source);\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_2__.insertProducts)([\n                mappedProduct\n            ]);\n            return {\n                results: [\n                    mappedProduct\n                ],\n                totalPages: 1\n            };\n        } else {\n            // For search queries, process as before\n            let results = [];\n            let totalPages = 1;\n            if (source === \"walmart\" && jsonData.items && Array.isArray(jsonData.items)) {\n                results = jsonData.items;\n                totalPages = jsonData.total_pages || 1;\n            } else if (source === \"amazon\" && jsonData.results) {\n                results = jsonData.results;\n                totalPages = jsonData.total_pages || 1;\n            } else {\n                console.error(`Invalid API response structure from ${source}:`, jsonData);\n                throw new Error(`Invalid API response structure from ${source}`);\n            }\n            const mappedResults = results.map((item)=>mapProduct(item, source));\n            console.log(`Mapped results for ${source}:`, JSON.stringify(mappedResults, null, 2));\n            // Insert all products into the database\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_2__.insertProducts)(mappedResults);\n            return {\n                results: filterSponsoredProducts(mappedResults),\n                totalPages\n            };\n        }\n    } catch (error) {\n        console.error(`Error fetching data from ${source} API:`, error.message);\n        console.error(`Error details:`, error.response ? error.response.data : \"No response data\");\n        throw error;\n    }\n};\nconst streamResults = async (sourceToFetch, term, sort_by, page)=>{\n    const cacheKey = `search:${sourceToFetch}:${term}:${sort_by}:${page}`;\n    try {\n        const cachedResults = await cacheHelper.get(cacheKey);\n        if (cachedResults) {\n            console.log(`Using cached results for ${sourceToFetch}`);\n            return {\n                source: sourceToFetch,\n                ...JSON.parse(cachedResults)\n            };\n        } else {\n            console.log(`Fetching fresh results for ${sourceToFetch}`);\n            // First, try to get results from our database\n            let dbResults = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_2__.getProducts)(sourceToFetch, term, parseInt(page), 20); // Assuming 20 results per page\n            if (dbResults.length > 0) {\n                console.log(`Found ${dbResults.length} results in database for ${sourceToFetch}`);\n                return {\n                    source: sourceToFetch,\n                    results: dbResults,\n                    totalPages: Math.ceil(dbResults.length / 20)\n                };\n            } else {\n                // If no results in database, fetch from API\n                const { results: sourceResults, totalPages } = await fetchProducts(term, sourceToFetch, sort_by, parseInt(page));\n                await cacheHelper.set(cacheKey, JSON.stringify({\n                    results: sourceResults,\n                    totalPages\n                }), {\n                    EX: 3600\n                }); // Cache for 1 hour\n                return {\n                    source: sourceToFetch,\n                    results: sourceResults,\n                    totalPages\n                };\n            }\n        }\n    } catch (error) {\n        console.error(`Error streaming results from ${sourceToFetch}:`, error.message);\n        return {\n            source: sourceToFetch,\n            error: `Failed to fetch data from ${sourceToFetch}: ${error.message}`,\n            details: error.response ? error.response.data : \"No response data\"\n        };\n    }\n};\nasync function handler(req, res) {\n    if (req.method !== \"GET\") {\n        return res.status(405).end();\n    }\n    const { term, page = \"1\", sort_by, source = \"all\" } = req.query;\n    res.setHeader(\"Content-Type\", \"application/json\");\n    let results = [];\n    if (source === \"all\") {\n        results = await Promise.all([\n            streamResults(\"walmart\", term, sort_by, page),\n            streamResults(\"amazon\", term, sort_by, page)\n        ]);\n    } else {\n        results = [\n            await streamResults(source, term, sort_by, page)\n        ];\n    }\n    res.status(200).json(results);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/search.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsearch&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsearch.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();